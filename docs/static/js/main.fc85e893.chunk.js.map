{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFechtGifs","key","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"qMAEaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAiB7C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IAC7BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACvCN,EAAc,OAMV,2BACAO,KAAK,OACLC,MAAST,EACTU,SAlBkB,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,Y,uBCLlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,yBAAKc,UAAU,+CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,+BAAKA,EAAL,OCHCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CACnCqB,KAAM,GACNa,SAAS,IAJ+B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqB5C,OAdAC,qBAAU,WAENxB,EAASC,GACRwB,MAAM,SAAAC,GAECH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAGGqB,EDlB8BK,CAAc1B,GAAlCa,EAFsB,EAE3BN,KAAaa,EAFc,EAEdA,QAErB,OACI,oCACA,wBAAIJ,UAAU,0CAAd,IAA0DhB,EAA1D,KAECoB,GAAW,uBAAGJ,UAAU,oCAAb,WAEZ,yBAAKA,UAAU,aAEHH,EAAOJ,KAAK,SAAAC,GAAG,OACf,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACJD,UEfhBkB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,cAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAQ9B,OACI,oCACQ,6CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ4C,EAAWpB,KAAI,SAACT,EAAU8B,GAAX,OACnB,kBAAC,EAAD,CACA9B,SAAUA,EACV2B,IAAK3B,U,MClBzB+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.fc85e893.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ( {setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length>2){\r\n        setCategories( cats =>  [inputValue,...cats,]);\r\n        setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n            type=\"text\"\r\n            value = {inputValue}\r\n            onChange={handleInputChange}\r\n             />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category) }&limit=10&api_key=IjNvueEuE35Av7bCs76epdrsxMFtgZJX`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__slideInDown'>\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFechtGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading } = useFechtGifs( category );\r\n\r\n    return (\r\n        <> \r\n        <h3 className='animate__animated animate__slideInDown'> { category } </h3>  \r\n\r\n        {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n\r\n        <div className=\"card-gird\">\r\n                {\r\n                    images.map( img => (\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        { ...img }\r\n                         />\r\n                    ))\r\n                }            \r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifts';\r\n\r\nexport const useFechtGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n});\r\n\r\nuseEffect(() => {\r\n\r\n    getGifs( category )\r\n    .then( imgs =>{\r\n\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n    })\r\n\r\n}, [category])\r\n\r\n\r\nreturn state;   \r\n// {data :[], loading: true};\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //      setCategories( [...categories, 'Hunter'] );\r\n    //     // setCategories( cats =>  [...cats, 'Hunter'] );\r\n    // }\r\n    return (\r\n        <>\r\n                <h2> GifExpertApp</h2>\r\n                <AddCategory setCategories={setCategories} />\r\n                <hr />\r\n\r\n                <ol>\r\n                    {\r\n                        categories.map((category, i) =>\r\n                    <GifGrid \r\n                    category={category}\r\n                    key={category}\r\n                    />\r\n                        )\r\n                    }\r\n                </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}